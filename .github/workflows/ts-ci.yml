# Workflow used as Continous Integration every time we have a PR.
name: Typescript

on:
  # Only build when pushed to main
  push:
    branches:
      - main
    paths:
      - 'packages/**'
      - 'package.json'
  # Build all pull requests
  pull_request:
    branches:
      - main
    paths:
    - 'packages/**'
    - 'package.json'
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest

    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        registry-url: 'https://npm.pkg.github.com'
        scope: '@saferplace'
        cache: pnpm

    - name: Install Dependencies
      run: pnpm install --frozen-lockfile
      env:
        # Generate a new Classic PAT
        # - scopes: read:packages
        NODE_AUTH_TOKEN: ${{ secrets.GH_NPM_TOKEN }}
    - name: Lint
      continue-on-error: true
      run: pnpm run ci:lint

    - name: Annotate Linting Results
      uses: ataylorme/eslint-annotate-action@1.2.0
      with:
        repo-token: "${{ github.token }}"
        report-json: eslint_report.json

  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # Allow completion of the task if another package fails.
      matrix:
        # TODO: can this be a shared variable?
        workspace:
          - pwa
          - review-ui
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Check Affected Workspaces
        id: changes
        uses: dorny/paths-filter@v2.11.1
        with:
          filters: |
            affected:
              - packages/${{ matrix.workspace }}/**
      
      - name: Skipping Workspace
        if: steps.changes.outputs.affected == 'false'
        run: echo "Skipping ${{ matrix.workspace }} as it has not changed"

      - name: Setup pnpm
        if: steps.changes.outputs.affected == 'true'
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Setup Node
        if: steps.changes.outputs.affected == 'true'
        uses: actions/setup-node@v3
        with:
          registry-url: 'https://npm.pkg.github.com'
          scope: '@saferplace'
          cache: pnpm

      - name: Install Dependencies
        if: steps.changes.outputs.affected == 'true'
        run: pnpm install --frozen-lockfile
        env:
          # Generate a new Classic PAT
          # - scopes: read:packages
          NODE_AUTH_TOKEN: ${{ secrets.GH_NPM_TOKEN }}

      - name: Build
        if: steps.changes.outputs.affected == 'true'
        working-directory: packages/${{ matrix.workspace }}
        run: pnpm run build